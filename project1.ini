import streamlit as st
import googlemaps
from math import sin, cos, sqrt, atan2, radians

# Google Maps API 설정 (본인의 API 키로 교체 필요)
API_KEY = "YOUR_GOOGLE_MAPS_API_KEY"
gmaps = googlemaps.Client(key=API_KEY)

# 질문 및 답변 데이터 정의
questions = [
    {"question": "오늘 기분이 어떠신가요?", "answers": ["매우 좋음", "보통", "별로 좋지 않음"]},
    {"question": "사람들과 함께 있을 때 에너지가 충전되나요?", "answers": ["매우 그렇다", "보통이다", "아니다"]},
    {"question": "활동적인 것을 좋아하시나요?", "answers": ["매우 좋아함", "보통", "선호하지 않음"]},
    {"question": "창의적인 활동을 즐기시나요?", "answers": ["매우 좋아함", "보통", "선호하지 않음"]},
    {"question": "경쟁적인 활동을 선호하시나요?", "answers": ["매우 좋아함", "보통", "선호하지 않음"]},
    {"question": "현재 스트레스 수준은 어떠신가요?", "answers": ["많이 받고 있음", "보통", "거의 없음"]},
    {"question": "실내와 실외 활동 중 어떤 것을 선호하시나요?", "answers": ["실외", "둘 다 좋음", "실내"]},
    {"question": "새로운 것을 배우는 것을 좋아하시나요?", "answers": ["매우 좋아함", "보통", "선호하지 않음"]},
    {"question": "혼자 하는 활동과 단체 활동 중 어떤 것을 선호하시나요?", "answers": ["단체 활동", "둘 다 좋음", "혼자 하는 활동"]},
    {"question": "지금 당장 하고 싶은 활동의 강도는?", "answers": ["활발한 활동", "적당한 활동", "조용한 활동"]},
]

plays = {
    "active_group": [
        {"title": "풋살", "description": "좁은 공간에서도 즐길 수 있는 미니 축구입니다.", "emoji": "⚽"},
        {"title": "킨볼", "description": "세 팀이 경쟁하는 대형 공 스포츠입니다.", "emoji": "🎈"},
        {"title": "얼티미트 프리스비", "description": "프리스비로 즐기는 비접촉 팀 스포츠입니다.", "emoji": "🥏"}
    ],
    "creative_indoor": [
        {"title": "그림 그리기 대회", "description": "함께 그림을 그리고 작품을 감상해보세요.", "emoji": "🎨"},
        {"title": "보드게임", "description": "전략적 사고와 재미를 동시에 즐기세요.", "emoji": "🎲"}
    ],
    "relaxing_solo": [
        {"title": "독서와 음악감상", "description": "조용히 책을 읽거나 음악을 들어보세요.", "emoji": "📚"},
        {"title": "명상과 요가", "description": "요가와 명상으로 마음의 안정을 찾아보세요.", "emoji": "🧘"}
    ]
}

# 사용자가 답변한 결과를 기반으로 맞춤형 놀이 추천
def recommend_play(answers):
    extroversion_score = answers[1]
    mood_score = answers[0]
    activity_preference = answers[2]

    if extroversion_score == 0 and activity_preference == 0:
        return plays["active_group"]
    elif mood_score == 2:
        return plays["relaxing_solo"]
    else:
        return plays["creative_indoor"]

# Streamlit 앱 시작
st.title("오늘의 놀이 추천 🎮")
st.write("몇 가지 질문에 답하고 맞춤형 놀이를 추천받아보세요!")

user_answers = []

# 질문 표시
for idx, question in enumerate(questions):
    st.write(f"**{question['question']}**")
    answer = st.radio("", question["answers"], key=f"q{idx}")
    user_answers.append(question["answers"].index(answer))

# 놀이 추천 결과 표시
if st.button("추천받기"):
    recommendations = recommend_play(user_answers)
    st.subheader("당신을 위한 놀이 추천")
    for play in recommendations:
        st.write(f"{play['emoji']} **{play['title']}**")
        st.write(play["description"])

# 거리 계산 함수
def calculate_distance(lat1, lon1, lat2, lon2):
    R = 6371  # 지구 반지름 (km)
    dlat = radians(lat2 - lat1)
    dlon = radians(lon2 - lon1)
    a = sin(dlat / 2) ** 2 + cos(radians(lat1)) * cos(radians(lat2)) * sin(dlon / 2) ** 2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
    return R * c

# 현재 위치 기반 추천 장소 표시
if st.button("주변 장소 찾기"):
    location = st.text_input("현재 위치 (위도, 경도 형태로 입력)", "37.5665,126.9780")
    lat, lng = map(float, location.split(","))
    search_type = st.selectbox("찾고 싶은 장소 유형", ["공원", "보드게임 카페", "운동장"])

    # Google Maps API로 장소 검색
    places_result = gmaps.places_nearby(location=(lat, lng), radius=5000, keyword=search_type)
    st.subheader("주변 추천 장소")
    for place in places_result["results"][:5]:
        place_name = place["name"]
        place_address = place["vicinity"]
        distance = calculate_distance(lat, lng, place["geometry"]["location"]["lat"], place["geometry"]["location"]["lng"])
        st.write(f"**{place_name}** - {place_address} ({distance:.1f}km)")

